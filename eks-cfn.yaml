#
# Author: Tre King
# Github: ha-king
#
AWSTemplateFormatVersion: "2010-09-09"
Description: Amazon EKS - Cluster

Parameters:
  ParentVPCStack:
    Description: 'Stack name of parent VPC stack based on vpc/vpc-*azs.yaml template.'
    Type: String
    Default: 'vpc-2az'
  ClusterName:
    Type: String
    Description: Name of the EKS cluster
    Default: 'EKS-DEV3'
  EksVersion:
    Type: String
    Description: Name of the EKS cluster
    Default: '1.23'
  KeyName:
    Type: String
    Description: Name of the EC2 ssh keypair name for node workders
    Default: 'eks-workers'
  InstanceType:
    Type: String
    Description: Type of the EC2 for node workders
    Default: 't3.medium'

Conditions:
  HasKeyName: !Not [!Equals [!Ref KeyName, '']]

Resources:
  EksClusterRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "eks.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSClusterPolicy
 
  EksNodeWorkerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: "Allow"
            Principal:
              Service:
                - "ec2.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonEKSWorkerNodePolicy
        - arn:aws:iam::aws:policy/AmazonEKS_CNI_Policy
        - arn:aws:iam::aws:policy/AmazonEC2ContainerRegistryReadOnly
      Policies:
        -
          PolicyName: "policy-for-eks-rbac"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: "Allow"
                Action:
                  - "eks:ListClusters"
                  - "eks:DescribeClusters"
                Resource:
                  - "*"

  NodeInstanceProfile:
    Type: "AWS::IAM::InstanceProfile"
    Properties:
      Roles:
        - Ref: EksNodeWorkerRole
        
  EKSCluster:
    Type: 'AWS::EKS::Cluster'
    Properties:
      Name: !Ref ClusterName
      Version: !Ref EksVersion
      RoleArn: !GetAtt ["EksClusterRole", "Arn"]
      ResourcesVpcConfig:
        SecurityGroupIds:
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-VPC-DefaultSecurityGroup'}
        SubnetIds:
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetAPrivate'}
        - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetBPrivate'}

  EKSNodegroup:
    Type: 'AWS::EKS::Nodegroup'
    DependsOn: "EKSCluster"
    Properties:
      AmiType: AL2_x86_64
      ClusterName: !Ref ClusterName
      DiskSize: 20
      ForceUpdateEnabled: true
      InstanceTypes:
        - Ref InstanceType
      NodegroupName: !Sub "${AWS::StackName}-nodegroup"
      NodeRole: !GetAtt ["EksNodeWorkerRole", "Arn"]
      RemoteAccess:
        Ec2SshKey: !If [HasKeyName, !Ref KeyName, !Ref 'AWS::NoValue']
      ScalingConfig:
        MinSize: 1
        DesiredSize: 1
        MaxSize: 4
      Subnets:
      - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetAPrivate'}
      - {'Fn::ImportValue': !Sub '${ParentVPCStack}-SubnetBPrivate'}
